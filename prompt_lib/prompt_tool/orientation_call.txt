### Instruction:
Take 9 steps. Turn around. Take 6 steps. Turn right. Take 9 steps.
Use the tool given in the input to write python code to solve the problem. Please wrap the code in your response in ```python...```
You are asked to print True or False about whether the person can return to origin.
### Input:
- Tool 1:
update_orientation: It takes the original orientation(N, E, S or W) and turn direction(left, right or around), and returns the new orientation. It should be used only if not always face forward.
```python
def update_orientation(orientation, turn_direction):
    ...
    return orientations[new_index]
```
- Tool 2:
update_location: It takes the current location(x, y), orientation(N, E, S or W), and steps, and returns the new location after action.
```python
def update_location(current_location, orientation, steps):
    ...
    return new_location
```
- Plan
The useful tool is [[update_location]] and [[update_orientation]]. Because not always facing forward, suppose the start location is (0, 0) and the start orientation is N. Every time we take turn, we should use [[update_orientation]] to get the new orientation. Then we can use [[update_location]] to calculate the new location, until we reach the final.
### Response:
```python
start = (0, 0)
orientation = 'N'
loc = update_location(start, orientation, 9)
orientation = update_orientation(orientation, 'around')
loc = update_location(loc, orientation, 6)
orientation = update_orientation(orientation, 'right')
loc = update_location(loc, orientation, 9)
if loc == start:
    print('True')
else:
    print('False')
```
